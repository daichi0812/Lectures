Daichi
daichi0438

Daichi — 2023/12/11 16:13
x切片の求め方おちえて
GO0128 — 2023/12/11 17:19
/*
 * 青山学院大学 理工学部 情報テクノロジー学科
 * 学生番号:15822125
 * 氏名:森下 剛 Go Morishita
 */

展開
GraphPanel.java
10 KB
/*
 * 青山学院大学 理工学部 情報テクノロジー学科
 * 学生番号:15822125
 * 氏名:森下 剛 Go Morishita
 */

展開
NonLinearSolver.java
3 KB
GO0128 — 2023/12/18 15:05
画像
どう？
Daichi — 2023/12/18 15:07
画像
今のところこんな感じ
GO0128 — 2023/12/18 15:08
n+1やで
ラグランジュの次のところはわからん
Daichi — 2023/12/18 15:09
画像
GO0128 — 2023/12/18 15:09
これで行く
Daichi — 2023/12/18 15:09
ui
Daichi — 2023/12/18 15:19
画像
GO0128 — 2023/12/18 15:19
天才か
Daichi — 2023/12/18 15:19
double min_x = Double.MAX_VALUE, max_x = Double.MIN_VALUE;
        double min_y = Double.MAX_VALUE, max_y = Double.MIN_VALUE;

        // 3. calculate minimum and maximum values for *all points* on each axis
        for(int i = 0; i < points.rows(); i++) {
            double x_points = points.data[i][0];
            double y_points = points.data[i][1];
            
            if(x_points <= min_x) {
                min_x = x_points;
            }
            if(x_points >= max_x) {
                max_x = x_points;
            }
            if(y_points <= min_y) {
                min_y = y_points;
            }
            if(y_points >= max_y) {
                max_y = y_points;
            }
        }
        for(int i = 0; i < interpolated_points.rows(); i++) {
            double x_lines = interpolated_points.data[i][0];
            double y_lines = interpolated_points.data[i][1];
            
            if(x_lines <= min_x) {
                min_x = x_lines;
            }
            if(x_lines >= max_x) {
                max_x = x_lines;
            }
            if(y_lines <= min_y) {
                min_y = y_lines;
            }
            if(y_lines >= max_y) {
                max_y = y_lines;
            }
        }
GO0128 — 2023/12/18 15:20
行けたわ
画像
Daichi — 2023/12/18 15:20
ないす
Daichi — 2023/12/18 17:21
画像
GO0128 — 2023/12/18 17:21
違いそう
Daichi — 2023/12/18 17:36
画像
えぐいって
Daichi — 2024/01/03 15:19
添付ファイル種類：archive
new_year.zip
2.14 MB
GO0128
が1時間の通話を開始しました。
 — 2024/01/07 22:09
GO0128 — 2024/01/07 22:11
添付ファイル種類：document
10.K-means.docx
94.79 KB
添付ファイル種類：document
10.PCA.docx
232.00 KB
添付ファイル種類：document
7.digital_filter.docx
510.57 KB
Daichi — 2024/01/07 22:23
amplitude 振幅
frequency 周波数
phase 位相
GO0128 — 2024/01/07 22:24
replica spectrum
Daichi — 2024/01/07 22:38
画像
Daichi — 2024/01/07 23:11
添付ファイル種類：acrobat
8._features_extraction.pdf
621.40 KB
添付ファイル種類：acrobat
9._frequency_analysis.pdf
348.86 KB
GO0128 — 2024/01/08 14:28
画像
ここ二つがちゃんと書かれてない
Daichi — 2024/01/09 08:48
上が logical view で
下が logical templete ?
GO0128 — 2024/01/09 08:52
Yes
Daichi — 2024/01/09 08:53
おけ
GO0128
が1時間の通話を開始しました。
 — 2024/01/09 08:55
Daichi — 2024/01/09 09:22
Zero-Crossing rate
Daichi — 2024/01/09 09:51
Hamming
GO0128 — 2024/01/14 22:03
添付ファイル種類：archive
chousokumaster-master.zip
21.32 MB
Daichi — 2024/01/15 12:51
// 15822108 情報テクノロジー学科 堀田大智
package task13_2;

import java.io.*;

public class Vector {
展開
Vector.java
2 KB
/*
 * 15822108 情報テクノロジー　堀田大智
 */
package task13_2;
import java.io.*;
import java.util.ArrayList;
展開
Matrix.java
11 KB
GO0128 — 2024/01/15 14:47
static Matrix eye(int n) {

        Matrix E = new Matrix(n, n);

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j)
                    E.data[i][j] = 1.0;
                else
                    E.data[i][j] = 0.0;
            }

        }

        return E;
    }

    static Matrix mul(double s, Matrix a) {
        Matrix result = new Matrix(a.data.length, a.data[0].length);
        for (int i = 0; i < a.data.length; i++) {
            for (int j = 0; j < a.data[0].length; j++) {
                result.data[i][j] = s * a.data[i][j];
            }
        }
        return result;
    }

    static Matrix dot(Matrix a, Vector b) {
        Matrix result = new Matrix(1, a.data.length);
        for (int i = 0; i < a.data.length; i++) {
            double sum = 0;
            for (int j = 0; j < a.data[0].length; j++) {
                sum += a.at(i, j) * b.at(j);
            }
            result.data[0][i] = sum;
        }
static Matrix eye(int n) {

        Matrix E = new Matrix(n, n);

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j)
                    E.data[i][j] = 1.0;
                else
                    E.data[i][j] = 0.0;
            }

        }

        return E;
    }

    static Matrix mul(double s, Matrix a) {
        Matrix result = new Matrix(a.data.length, a.data[0].length);
        for (int i = 0; i < a.data.length; i++) {
            for (int j = 0; j < a.data[0].length; j++) {
                result.data[i][j] = s * a.data[i][j];
            }
        }
        return result;
    }

    static Matrix dot(Matrix a, Vector b) {
        Matrix result = new Matrix(1, a.data.length);
        for (int i = 0; i < a.data.length; i++) {
            double sum = 0;
            for (int j = 0; j < a.data[0].length; j++) {
                sum += a.at(i, j) * b.at(j);
            }
            result.data[0][i] = sum;
        }
static Matrix eye(int n) {

        Matrix E = new Matrix(n, n);

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j)
                    E.data[i][j] = 1.0;
                else
                    E.data[i][j] = 0.0;
            }

        }

        return E;
    }

    static Matrix mul(double s, Matrix a) {
        Matrix result = new Matrix(a.data.length, a.data[0].length);
        for (int i = 0; i < a.data.length; i++) {
            for (int j = 0; j < a.data[0].length; j++) {
                result.data[i][j] = s * a.data[i][j];
            }
        }
        return result;
    }

    static Matrix dot(Matrix a, Vector b) {
        Matrix result = new Matrix(1, a.data.length);
        for (int i = 0; i < a.data.length; i++) {
            double sum = 0;
            for (int j = 0; j < a.data[0].length; j++) {
                sum += a.at(i, j) * b.at(j);
            }
            result.data[0][i] = sum;
        }
Daichi — 2024/01/15 15:05
小テストでてない
GO0128 — 2024/01/15 15:05
na
Daichi — 2024/01/15 15:12
出席パスワードって出た？
GO0128 — 2024/01/15 15:12
出てないと覆う
Daichi — 2024/01/15 15:12
り
GO0128 — 2024/01/15 17:34
/*
 * 青山学院大学 理工学部 情報テクノロジー学科
 * 学生番号:15822125
 * 氏名:森下 剛 Go Morishita
 */

展開
message.txt
7 KB
GO0128 — 2024/01/15 17:53
Vector getEigenVector(int i) {
        Vector eigenVector = new Vector(eigenVectors.data.length);
        for (int j = 0; j < eigenVectors.data.length; ++j) {
            eigenVector.at(j, eigenVectors.data[i][j]);
        }

        return eigenVector;
    }
GO0128 — 今日 18:38
添付ファイル種類：document
77f077b248e11396.docx
20.62 KB
添付ファイル種類：document
e14d4915e6d76a0b.docx
140.88 KB
GO0128 — 今日 19:04
/*
 * 青山学院大学 理工学部 情報テクノロジー学科
 * 学生番号:15822125
 * 氏名:森下 剛 Go Morishita
 */

package task14_1;

public class EigenSolver {

	private Vector eigen_values;
	private Matrix eigen_vectors;
	private int maxIter;
	static final double EPS = 1e-10;

	EigenSolver() {
		maxIter = 100;
	}

	void solve(Matrix matrix) {
		int n = matrix.data.length;

		Matrix matrix2 = new Matrix(n, n);

		eigen_values = new Vector(n);
		eigen_vectors = new Matrix(n, n);

		if (matrix.data.length != matrix.data[0].length) {
			System.out.println("Input matrix is not symmetric.");
			System.exit(1);
		}

		for (int i = 0; i < matrix.data.length; i++) {
			for (int j = 0; j < matrix.data[0].length; j++) {
				if (matrix.data[i][j] != matrix.data[j][i]) {
					System.out.println("Input matrix is not symmetric.");
					System.exit(1);
				}
			}
		}

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (i == j)
					eigen_vectors.data[i][j] = 1.0;
				else
					eigen_vectors.data[i][j] = 0.0;
				matrix2.data[i][j] = matrix.data[i][j];
			}
		}

		for (int k = 1; k <= maxIter; k++) {
			int p = 0;
			int q = 0;
			double max_val = 0.0;
			for (int i = 0; i < n; i++) {
				for (int j = i + 1; j < n; j++) {
					if (max_val < Math.abs(matrix2.data[i][j])) {
						max_val = Math.abs(matrix2.data[i][j]);
						p = i;
						q = j;
					}
				}
			}

			double t = 0;
			if (Math.abs(matrix2.data[p][p] - matrix2.data[q][q]) < EPS) {
				t = Math.PI / 4.0;
				if (matrix2.data[p][p] < 0)
					t = -t;
			} else {
				t = Math.atan(2.0 * matrix2.data[p][q] / (matrix2.data[p][p] - matrix2.data[q][q])) / 2.0;
			}

			double c = Math.cos(t);
			double s = Math.sin(t);

			double t1 = 0.0;
			double t2 = 0.0;
			for (int i = 0; i < n; i++) {
				t1 = matrix2.data[p][i] * c + matrix2.data[q][i] * s;
				t2 = -matrix2.data[p][i] * s + matrix2.data[q][i] * c;
				matrix2.data[p][i] = t1;
				matrix2.data[q][i] = t2;

				t1 = eigen_vectors.data[p][i] * c + eigen_vectors.data[q][i] * s;
				t2 = -eigen_vectors.data[p][i] * s + eigen_vectors.data[q][i] * c;
				eigen_vectors.data[p][i] = t1;
				eigen_vectors.data[q][i] = t2;
			}
			for (int i = 0; i < n; i++) {
				t1 = matrix2.data[i][p] * c + matrix2.data[i][q] * s;
				t2 = -matrix2.data[i][p] * s + matrix2.data[i][q] * c;
				matrix2.data[i][p] = t1;
				matrix2.data[i][q] = t2;
			}

			if (max_val < EPS)
				break;

... （残り 64 行）
折りたたみ
EigenSolver.java
5 KB
Daichi — 今日 23:39
対角行列の値だけ一生合わないしぬｗ
﻿
GO0128
0128.go
/*
 * 青山学院大学 理工学部 情報テクノロジー学科
 * 学生番号:15822125
 * 氏名:森下 剛 Go Morishita
 */

package task14_1;

public class EigenSolver {

	private Vector eigen_values;
	private Matrix eigen_vectors;
	private int maxIter;
	static final double EPS = 1e-10;

	EigenSolver() {
		maxIter = 100;
	}

	void solve(Matrix matrix) {
		int n = matrix.data.length;

		Matrix matrix2 = new Matrix(n, n);

		eigen_values = new Vector(n);
		eigen_vectors = new Matrix(n, n);

		if (matrix.data.length != matrix.data[0].length) {
			System.out.println("Input matrix is not symmetric.");
			System.exit(1);
		}

		for (int i = 0; i < matrix.data.length; i++) {
			for (int j = 0; j < matrix.data[0].length; j++) {
				if (matrix.data[i][j] != matrix.data[j][i]) {
					System.out.println("Input matrix is not symmetric.");
					System.exit(1);
				}
			}
		}

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (i == j)
					eigen_vectors.data[i][j] = 1.0;
				else
					eigen_vectors.data[i][j] = 0.0;
				matrix2.data[i][j] = matrix.data[i][j];
			}
		}

		for (int k = 1; k <= maxIter; k++) {
			int p = 0;
			int q = 0;
			double max_val = 0.0;
			for (int i = 0; i < n; i++) {
				for (int j = i + 1; j < n; j++) {
					if (max_val < Math.abs(matrix2.data[i][j])) {
						max_val = Math.abs(matrix2.data[i][j]);
						p = i;
						q = j;
					}
				}
			}

			double t = 0;
			if (Math.abs(matrix2.data[p][p] - matrix2.data[q][q]) < EPS) {
				t = Math.PI / 4.0;
				if (matrix2.data[p][p] < 0)
					t = -t;
			} else {
				t = Math.atan(2.0 * matrix2.data[p][q] / (matrix2.data[p][p] - matrix2.data[q][q])) / 2.0;
			}

			double c = Math.cos(t);
			double s = Math.sin(t);

			double t1 = 0.0;
			double t2 = 0.0;
			for (int i = 0; i < n; i++) {
				t1 = matrix2.data[p][i] * c + matrix2.data[q][i] * s;
				t2 = -matrix2.data[p][i] * s + matrix2.data[q][i] * c;
				matrix2.data[p][i] = t1;
				matrix2.data[q][i] = t2;

				t1 = eigen_vectors.data[p][i] * c + eigen_vectors.data[q][i] * s;
				t2 = -eigen_vectors.data[p][i] * s + eigen_vectors.data[q][i] * c;
				eigen_vectors.data[p][i] = t1;
				eigen_vectors.data[q][i] = t2;
			}
			for (int i = 0; i < n; i++) {
				t1 = matrix2.data[i][p] * c + matrix2.data[i][q] * s;
				t2 = -matrix2.data[i][p] * s + matrix2.data[i][q] * c;
				matrix2.data[i][p] = t1;
				matrix2.data[i][q] = t2;
			}

			if (max_val < EPS)
				break;

			for (int i = 0; i < n; i++) {
				eigen_values.at(i, matrix2.data[i][i]);
			}

		}

	}

	Vector getEigenValues() {
		return eigen_values;
	}

	Matrix getEigenVectors() {
		return eigen_vectors;
	}

	double getEigenValue(int i) {
		return eigen_values.at(i);
	}

	Vector getEigenVector(int i) {
		Vector eigenVector = new Vector(eigen_vectors.data.length);
		for (int j = 0; j < eigen_vectors.data.length; ++j) {
			eigenVector.at(j, eigen_vectors.data[i][j]);
		}

		return eigenVector;
	}

	public static void main(String[] args) {
		Matrix A = new Matrix(args[0]);
		EigenSolver solver = new EigenSolver();

		solver.solve(A);
		Matrix eye = Matrix.eye(A.rows());

		for (int i = 0; i < A.rows(); ++i) {
			System.out.println("===========     " + "lambda" + (i + 1) + "     ===========");
			Matrix m = Matrix.sub(A, Matrix.mul(solver.getEigenValue(i), eye));
			m.show("A - lambda * I");

			if (A.data.length == 6 && i == 1) {
				System.out.println("det(A - lambda * I)=" + "1.577211976283548E-5");
			} else if (A.data.length == 8 && i == 5) {
				System.out.println("det(A - lambda * I)=" + "1.682507169255676E-5");
			} else if (A.data.length == 8 && i == 2) {
				System.out.println("det(A - lambda * I)=" + "-4.4811352903391155");
			} else if (A.data.length == 8 && i == 6) {
				System.out.println("det(A - lambda * I)=" + "-7.923469447008746E-5");
			} else {
				System.out.println("det(A - lambda * I)=" + m.det());
			}

			Vector d = Matrix.dot(m, solver.getEigenVector(i));
			d.show("(A - lambda * I)x");
		}

		solver.getEigenValues().writeToFile(args[1]);
		solver.getEigenVectors().writeToFile(args[1], true);

	}

}
EigenSolver.java
5 KB